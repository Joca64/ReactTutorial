{"ast":null,"code":"import _slicedToArray from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joaquim.mendes/Documents/Testing Area/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joaquim.mendes/Documents/Testing Area/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: props.className,\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  function Board() {\n    _classCallCheck(this, Board);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Board).apply(this, arguments));\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this = this;\n\n      var squareName = this.props.victory[i] ? 'square victory' : 'square';\n      return React.createElement(Square, {\n        key: i,\n        value: this.props.squares[i],\n        className: squareName,\n        onClick: function onClick() {\n          return _this.props.onClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"createRows\",\n    value: function createRows() {\n      var rows = [];\n\n      for (var line = 0; line < 3; line++) {\n        var cells = [];\n\n        for (var cell = 0; cell < 3; cell++) {\n          cells.push(this.renderSquare(3 * line + cell));\n        }\n\n        rows.push(React.createElement(\"div\", {\n          className: \"board-row\",\n          key: line,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, cells));\n      }\n\n      return rows;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.createRows());\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game(props) {\n    var _this2;\n\n    _classCallCheck(this, Game);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this2.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moveSpot: ''\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      victoryArray: Array(9).fill(false),\n      normalOrder: true\n    };\n    return _this2;\n  }\n\n  _createClass(Game, [{\n    key: \"jumpTo\",\n    value: function jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n        victoryArray: Array(9).fill(false)\n      });\n      var history = this.state.history;\n      var currentMove = history[this.state.stepNumber];\n      calculateWinner(currentMove.squares, this.state.victoryArray);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var history = this.state.history.slice(0, this.state.stepNumber + 1);\n      var current = history[history.length - 1];\n      var squares = current.squares.slice();\n\n      if (squares[i] || calculateWinner(squares, this.state.victoryArray)) {\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n          moveSpot: i\n        }]),\n        xIsNext: !this.state.xIsNext,\n        stepNumber: history.length,\n        victoryArray: this.state.victoryArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var history = this.state.history;\n      var currentMove = history[this.state.stepNumber];\n      var gameEndMessage = calculateWinner(currentMove.squares, this.state.victoryArray);\n      var movesButtons = history.map(function (move, moveNumber) {\n        var description = moveNumber ? 'Go to move #' + moveNumber + ' (' + Math.ceil((move.moveSpot + 1) / 3) + ',' + (move.moveSpot + 1 - Math.floor(move.moveSpot / 3) * 3) + ')' : 'Go to game start';\n\n        if (moveNumber === _this3.state.stepNumber) {\n          return React.createElement(\"li\", {\n            key: moveNumber,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: function onClick() {\n              return _this3.jumpTo(moveNumber);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, description)));\n        } else {\n          return React.createElement(\"li\", {\n            key: moveNumber,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            onClick: function onClick() {\n              return _this3.jumpTo(moveNumber);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, description));\n        }\n      });\n\n      if (!this.state.normalOrder) {\n        movesButtons.reverse();\n      }\n\n      var status;\n\n      if (gameEndMessage) {\n        status = gameEndMessage;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Board, {\n        key: \"board\",\n        squares: currentMove.squares,\n        victory: this.state.victoryArray,\n        onClick: function onClick(i) {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            normalOrder: !_this3.state.normalOrder\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Reverse Move Order\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, status), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, movesButtons)));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nfunction calculateWinner(squares, victory) {\n  var lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (var i = 0; i < lines.length; i++) {\n    var _lines$i = _slicedToArray(lines[i], 3),\n        a = _lines$i[0],\n        b = _lines$i[1],\n        c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      victory[a] = true;\n      victory[b] = true;\n      victory[c] = true;\n      return 'Winner: ' + squares[a];\n    }\n  }\n\n  for (var cell = 0; cell < squares.length; cell++) {\n    if (!squares[cell]) {\n      return null;\n    }\n  }\n\n  return 'It\\'s a draw!';\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/joaquim.mendes/Documents/Testing Area/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","className","onClick","value","Board","i","squareName","victory","squares","rows","line","cells","cell","push","renderSquare","createRows","Component","Game","state","history","Array","fill","moveSpot","xIsNext","stepNumber","victoryArray","normalOrder","step","setState","currentMove","calculateWinner","slice","current","length","concat","gameEndMessage","movesButtons","map","move","moveNumber","description","Math","ceil","floor","jumpTo","reverse","status","handleClick","lines","a","b","c","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className={props.className}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const squareName = this.props.victory[i] ? 'square victory' : 'square';\n\n    return <Square\n      key={i}\n      value={this.props.squares[i]}\n      className={squareName}\n      onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  createRows() {\n    let rows = [];\n\n    for(let line = 0; line < 3; line++) {\n      let cells = [];\n      \n      for(let cell = 0; cell < 3; cell++) {\n        cells.push(this.renderSquare(3 * line + cell));\n      }\n\n      rows.push(<div className=\"board-row\" key={line}>{cells}</div>)\n    }\n    return rows;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createRows()}\n      </div>\n    )\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        moveSpot: ''\n      }],\n      xIsNext: true,\n      stepNumber: 0,\n      victoryArray: Array(9).fill(false),\n      normalOrder: true\n    };\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) === 0,\n      victoryArray: Array(9).fill(false)\n    })\n    const history = this.state.history;\n    const currentMove = history[this.state.stepNumber];\n    calculateWinner(currentMove.squares, this.state.victoryArray);\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if(squares[i] || calculateWinner(squares, this.state.victoryArray)) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        moveSpot: i\n      }]),\n      xIsNext: !this.state.xIsNext,\n      stepNumber: history.length,\n      victoryArray: this.state.victoryArray\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const currentMove = history[this.state.stepNumber];\n    const gameEndMessage = calculateWinner(currentMove.squares, this.state.victoryArray);\n\n    const movesButtons = history.map((move, moveNumber) => {\n      const description = moveNumber ?\n        'Go to move #' + moveNumber + ' (' +Math.ceil((move.moveSpot+1)/3) +',' +((move.moveSpot+1) - (Math.floor(move.moveSpot/3)*3)) +')':\n        'Go to game start';\n\n      if(moveNumber === this.state.stepNumber)\n      {\n        return (\n          <li key={moveNumber}>\n            <button onClick={() => this.jumpTo(moveNumber)}><b>{description}</b></button>\n          </li>\n        )\n      } else {\n        return (\n          <li key={moveNumber}>\n            <button onClick={() => this.jumpTo(moveNumber)}>{description}</button>\n          </li>\n        )\n      }\n    });\n\n    if(!this.state.normalOrder) {\n      movesButtons.reverse();\n    }\n\n    let status;\n    if(gameEndMessage) {\n      status = gameEndMessage;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            key='board'\n            squares={currentMove.squares}\n            victory={this.state.victoryArray}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <button onClick={() => this.setState({normalOrder: !this.state.normalOrder})}>Reverse Move Order</button>\n          <div>{status}</div>\n          <ol>{movesButtons}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares, victory) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      victory[a] = true;\n      victory[b] = true;\n      victory[c] = true;\n      return 'Winner: ' +squares[a];\n    }\n  }\n\n  for (let cell = 0; cell < squares.length; cell++) {\n    if(!squares[cell]) {\n      return null;\n    }\n  }\n\n  return 'It\\'s a draw!';\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}